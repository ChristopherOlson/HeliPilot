#!/bin/bash
# script to run the HeliPilot simulator (SITL)
# created by Chris Olson for HeliPilot

function draw_logo() {
    clear
    echo -e "\e[1;34m 0  0  0000  0     0 \e[0m\e[1;31m  0 0   0  0      000   0000000 \e[0m"
    echo -e "\e[1;34m 0  0  0     0     0 \e[0m\e[1;31m  0  0  0  0     0   0     0 \e[0m"
    echo -e "\e[1;34m 0000  000   0     0 \e[0m\e[1;31m  0 0   0  0    0     0    0 \e[0m"
    echo -e "\e[1;34m 0  0  0     0     0 \e[0m\e[1;31m  0     0  0     0   0     0 \e[0m"
    echo -e "\e[1;34m 0  0  0000  0000  0 \e[0m\e[1;31m  0     0  0000   000      0 \e[0m"
    echo -e "\e[1;34m----------------------\e[0m\e[1;31m--------------------------- \e[0m"
    echo ""
    echo "updating HeliPilot programs.................."
    echo ""
}

ASSUME_YES=false
function maybe_prompt_user() {
    if $ASSUME_YES; then
        return 0
    else
        read -p "$1"
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            return 0
        else
            return 1
        fi
    fi
}

draw_logo
# check that HeliPilot repo exists
if [ ! -e ~/github/HeliPilot/build-setup.sh ]; then
    if [ ! -e ~/.config/helipilot/helipilot_path.txt ]; then
        echo ""
        echo -e "\e[1;31m The HeliPilot code repo was not found at ~/github/HeliPilot \e[0m"
        echo ""
        echo "If you have already cloned the code in a different location enter the path"
        echo "to where you have it cloned. Example : if the code is in your Documents -> HeliPilot"
        echo "then type Documents/HeliPilot - do not use a ~/ or full path like /home/chris/"
        echo ""
        echo "If you have never cloned the code yet just hit Enter, we will fetch it for you"
        echo "You will need this to run the HeliPilot simulator"
        read -p "path to HeliPilot :" new_helipilot_path
        if [ "$new_helipilot_path" == "" ]; then
            sudo apt install git
            mkdir -m 755 ~/github
            echo ""
            echo "cloning the HeliPilot code to github/HeliPilot........."
            cd ~/github && git clone https://github.com/MidwestAire/HeliPilot.git
            helipilot_path="github/HeliPilot"
        else
            touch ~/.config/helipilot/helipilot_path.txt
            chmod 644 ~/.config/helipilot/helipilot_path.txt
            echo "$new_helipilot_path" >> ~/.config/helipilot/helipilot_path.txt
            helipilot_path="$new_helipilot_path"
        fi
    else
        helipilot_path=$( cat ~/.config/helipilot/helipilot_path.txt )
    fi
else
    helipilot_path="github/HeliPilot"
fi

# check that user entry is valid
if [ ! -e ~/$helipilot_path/build-setup.sh ]; then
    echo ""
    echo "Sorry - the HeliPilot code was not found at ~/$helipilot_path"
    rm ~/.config/helipilot/helipilot_path.txt
    echo "Restart the Updater and try again......."
    exit 1
fi

# use git to update from master
cd ~/$helipilot_path
git checkout master && git submodule update --recursive
git fetch origin master
git rebase origin/master

########## HeliPilot Desktop Apps for Ubuntu systems ################
# check software version
draw_logo
desktop_ver=$( cat ~/.config/helipilot/HeliPilot_desktop_version.txt )
new_desktop_ver=$( cat Tools/HeliPilot_desktop_version.txt )

echo ""
echo "Your current HeliPilot Desktop Application version is $desktop_ver"
echo ""
echo "The newest Desktop Application version is $new_desktop_ver"

# install Firmware Builder for Ubuntu Desktop Systems
echo ""
echo "Installing the HeliPilot Firmware Builder and Dock Launcher....."
if [ -e ~/.local/bin/firmware-build.sh ]; then
    if maybe_prompt_user "Firmware Builder already installed. Upgrade to latest version [N/y]?" ; then
        cp Tools/firmware-build/firmware-build.sh ~/.local/bin/firmware-build.sh
        chmod 755 ~/.local/bin/firmware-build.sh
    else
        echo ""
        echo "Skipping Firmware Builder upgrade"
    fi
fi
    
if [ ! -e ~/.local/bin/firmware-build.sh ]; then
    # we try to create the directory structure for WSL on Windows, since it doesn't exist by default
    mkdir -m 755 ~/.local/bin
    sudo mkdir -m 755 /usr/share/icons/helipilot
    sudo cp -r Tools/firmware-build/icons/ /usr/share/icons/helipilot/
    cp Tools/firmware-build/firmware-build.sh ~/.local/bin/firmware-build.sh
    chmod 755 ~/.local/bin/firmware-build.sh
fi

# create Application Launcher
if [ ! -e ~/.local/share/applications/HeliPilot-Build.desktop ]; then
    # we try to create the directory structure for WSL on Windows, since it doesn't exist by default
    mkdir -m 755 ~/.local/share/applications
    touch ~/.local/share/applications/HeliPilot-Build.desktop
    echo "[Desktop Entry]" >> ~/.local/share/applications/HeliPilot-Build.desktop
    echo "Encoding=UTF-8" >> ~/.local/share/applications/HeliPilot-Build.desktop
    echo "Name=HeliPilot-Build" >> ~/.local/share/applications/HeliPilot-Build.desktop
    echo "Comment=HeliPilot Build Launcher" >> ~/.local/share/applications/HeliPilot-Build.desktop
    echo "Exec=gnome-terminal -e .local/bin/firmware-build.sh" >> ~/.local/share/applications/HeliPilot-Build.desktop
    echo "Icon=/usr/share/icons/helipilot/icons/systembuild.png" >> ~/.local/share/applications/HeliPilot-Build.desktop
    echo "Type=Application" >> ~/.local/share/applications/HeliPilot-Build.desktop
    chmod 755 ~/.local/share/applications/HeliPilot-Build.desktop
    echo ""
    echo "Application Launcher Installed........"
else
    echo ""
    echo "nothing to do - application launcher already exists!"
fi

echo ""
echo "Firmware Build application launcher for the Dock is installed......"
if maybe_prompt_user "Do you want a desktop launcher too [N/y]?" ; then
    echo ""
    echo "creating desktop icon for building HeliPilot......."
    if [ ! -e ~/Desktop/HeliPilot-Build.desktop ]; then
        # we try to create the directory structure for WSL on Windows, since it doesn't exist by default
        mkdir -m 755 ~/Desktop
        # create Application Launcher
        touch ~/Desktop/HeliPilot-Build.desktop
        echo "[Desktop Entry]" >> ~/Desktop/HeliPilot-Build.desktop
        echo "Encoding=UTF-8" >> ~/Desktop/HeliPilot-Build.desktop
        echo "Name=HeliPilot-Build" >> ~/Desktop/HeliPilot-Build.desktop
        echo "Comment=HeliPilot Build Launcher" >> ~/Desktop/HeliPilot-Build.desktop
        echo "Exec=gnome-terminal -e .local/bin/firmware-build.sh" >> ~/Desktop/HeliPilot-Build.desktop
        echo "Icon=/usr/share/icons/helipilot/icons/systembuild.png" >> ~/Desktop/HeliPilot-Build.desktop
        echo "Type=Application" >> ~/Desktop/HeliPilot-Build.desktop
        chmod 755 ~/Desktop/HeliPilot-Build.desktop
    else
        echo ""
        echo "nothing to do - application launcher already exists!"
    fi
else
    echo ""
    echo "Skipping installation of desktop Launcher.........."
fi

# install Simulator for Ubuntu Desktop Systems
echo ""
echo "Installing the HeliPilot Simulator and Dock Launcher....."
if [ -e ~/.local/bin/sim ]; then
    if maybe_prompt_user "Simulator already installed. Upgrade to latest version [N/y]?" ; then
        cp Tools/HeliPilot_desktop_version.txt ~/.config/helipilot/HeliPilot_desktop_version.txt
        chmod 644 ~/.config/helipilot/HeliPilot_desktop_version.txt
        cp ./sim ~/.local/bin/sim
        chmod 755 ~/.local/bin/sim
    else
        echo ""
        echo "Skipping Simulator upgrade"
    fi
fi

if [ ! -e ~/.local/bin/sim ]; then
    cp ./sim ~/.local/bin/sim
    chmod 755 ~/.local/bin/sim
fi

# create Application Launcher
if [ ! -e ~/.local/share/applications/HeliPilot-Simulator.desktop ]; then
    touch ~/.local/share/applications/HeliPilot-Simulator.desktop
    echo "[Desktop Entry]" >> ~/.local/share/applications/HeliPilot-Simulator.desktop
    echo "Encoding=UTF-8" >> ~/.local/share/applications/HeliPilot-Simulator.desktop
    echo "Name=HeliPilot-Simulator" >> ~/.local/share/applications/HeliPilot-Simulator.desktop
    echo "Comment=HeliPilot Simulator Launcher" >> ~/.local/share/applications/HeliPilot-Simulator.desktop
    echo "Exec=gnome-terminal -e .local/bin/sim" >> ~/.local/share/applications/HeliPilot-Simulator.desktop
    echo "Icon=/usr/share/icons/helipilot/icons/simulator.png" >> ~/.local/share/applications/HeliPilot-Simulator.desktop
    echo "Type=Application" >> ~/.local/share/applications/HeliPilot-Simulator.desktop
    chmod 755 ~/.local/share/applications/HeliPilot-Simulator.desktop
else
    echo ""
    echo "nothing to do - application launcher already exists!"
fi

echo ""
echo "Simulator application launcher for the Dock is installed......"
if maybe_prompt_user "Do you want a desktop launcher too [N/y]?" ; then
    echo ""
    echo "creating desktop icon for running the HeliPilot simulator......."
    if [ ! -e ~/Desktop/HeliPilot-Simulator.desktop ]; then
        # we try to create the directory structure for WSL on Windows, since it doesn't exist by default
        mkdir -m 755 ~/Desktop
        # create Application Launcher
        touch ~/Desktop/HeliPilot-Simulator.desktop
        echo "[Desktop Entry]" >> ~/Desktop/HeliPilot-Simulator.desktop
        echo "Encoding=UTF-8" >> ~/Desktop/HeliPilot-Simulator.desktop
        echo "Name=HeliPilot-Simulator" >> ~/Desktop/HeliPilot-Simulator.desktop
        echo "Comment=HeliPilot Simulator Launcher" >> ~/Desktop/HeliPilot-Simulator.desktop
        echo "Exec=gnome-terminal -e .local/bin/sim" >> ~/Desktop/HeliPilot-Simulator.desktop
        echo "Icon=/usr/share/icons/helipilot/icons/simulator.png" >> ~/Desktop/HeliPilot-Simulator.desktop
        echo "Type=Application" >> ~/Desktop/HeliPilot-Simulator.desktop
        chmod 755 ~/Desktop/HeliPilot-Simulator.desktop
    else
        echo ""
        echo "nothing to do - application launcher already exists!"
    fi
else
    echo ""
    echo "Skipping installation of desktop Launcher.........."
fi

echo ""
current_desktop_ver=$( cat ~/.config/helipilot/HeliPilot_desktop_version.txt )
echo "Your HeliPilot Desktop Application version is $current_desktop_ver"
echo ""
read -p "Press Ctl-C to exit" entry



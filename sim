#!/bin/bash
# script to run the HeliPilot simulator (SITL)
# created by Chris Olson for HeliPilot

function draw_logo() {
    clear
    echo -e "\e[1;34m 0  0  0000  0     0 \e[0m\e[1;31m  0 0   0  0      000   0000000 \e[0m"
    echo -e "\e[1;34m 0  0  0     0     0 \e[0m\e[1;31m  0  0  0  0     0   0     0 \e[0m"
    echo -e "\e[1;34m 0000  000   0     0 \e[0m\e[1;31m  0 0   0  0    0     0    0 \e[0m"
    echo -e "\e[1;34m 0  0  0     0     0 \e[0m\e[1;31m  0     0  0     0   0     0 \e[0m"
    echo -e "\e[1;34m 0  0  0000  0000  0 \e[0m\e[1;31m  0     0  0000   000      0 \e[0m"
    echo -e "\e[1;34m----------------------\e[0m\e[1;31m--------------------------- \e[0m"
    echo "starting up the simulator.................."
    echo ""
}

# check that user locations.txt exists
draw_logo
if [ ! -e ~/.config/helipilot/locations.txt ]; then
    # we try to create a .config folder for WSL on Windows
    mkdir -m 755 ~/.config
    mkdir -m 755 ~/.config/helipilot && (umask 133 ; touch ~/.config/helipilot/locations.txt)
    echo "adding user locations.txt file..........."
    echo "#NAME=latitude,longitude,absolute-altitude,heading" >> ~/.config/helipilot/locations.txt
    echo "Default=45.4175714,-91.7720328,334,282" >> ~/.config/helipilot/locations.txt
else
    echo "user locations already exists!"
    echo ""
    echo "TO QUIT THE SIMULATOR AT ANY TIME press Ctl-C"
    echo ""
fi

ASSUME_YES=false
function maybe_prompt_user() {
    if $ASSUME_YES; then
        return 1
    else
        read -p "$1"
        if [[ $REPLY =~ ^[Nn]$ ]]; then
            return 1
        else
            return 0
        fi
    fi
}

if maybe_prompt_user "Press Enter to continue SIM startup, or Ctl-C to exit" ; then
    while getopts l: option
        do
        case "${option}"
        in
        l) location=${OPTARG};;
    esac
done

    draw_logo
    if maybe_prompt_user "Dislay MavProxy console and map? This is optional [n/Y]" ; then
        console="--console"
        map="--map"
    fi

    draw_logo
    branch="master"
    echo ""
    echo "The SIM will run on $branch by default. Enter a different branch to run the"
    echo "sim, i.e. HeliPilot-v20, HeliPilot-v19 or another custom branch"
    echo ""
    read -p "Branch : " new_branch
    if [ "$new_branch" == "HeliPilot-v20" ]; then
        vehicle_type="ArduCopter"
        cd ~/github/HeliPilot
        git checkout $new_branch
        git submodule update --init --recursive
    elif [ "$new_branch" == "HeliPilot-v19" ]; then
        vehicle_type="ArduCopter"
        cd ~/github/HeliPilot
        git checkout $new_branch
        git submodule update --init --recursive
    elif [ "$new_branch" != "$branch" ]; then
        vehicle_type="Helicopter"
        cd ~/github/HeliPilot
        git checkout $branch
        git submodule update --init --recursive
    else
        vehicle_type="Helicopter"
        cd ~/github/HeliPilot
        git checkout $branch
        git submodule update --init --recursive
        echo ""
    fi
    
    echo "The SIM will run on $branch"
    
    # for compatibility with V20 and v19 branches we create and ardupilot directory
    mkdir ~/.config/ardupilot
    # then we create a symlink to locations.txt
    ln -s ~/.config/helipilot/locations.txt ~/.config/ardupilot/locations.txt

    draw_logo
    if [ -z "$location" ] ; then
        if maybe_prompt_user "Enter a new location for this SIM flight [n/Y]?" ; then
            echo ""
            echo "enter what you wish to call this location"
            echo "Example: Barron"
            echo ""
            read -p 'Location: ' new_location
            echo ""
            echo "enter the details for $new_location seperated by commas with no spaces in the format:"
            echo "latitude,longitude,altitude,initial-heading"
            echo ""
            echo "Example: 45.4175714,-91.7720328,334,270 (NOTE: altitude is MSL in meters)"
            echo ""
            read -p 'Details: ' details
            echo "$new_location=$details" >> ~/.config/helipilot/locations.txt
            Tools/autotest/sim_vehicle.py $console $map -v $vehicle_type -f heli -L $new_location
        else
            Tools/autotest/sim_vehicle.py $console $map -v $vehicle_type -f heli -L Default
        fi
    else
        Tools/autotest/sim_vehicle.py $console $map -v $vehicle_type -f heli -L $location
    fi
else
    echo "Shutting down HeliPilot sim.........."
fi
